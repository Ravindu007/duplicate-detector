name: Duplicate GitHub Issue Detection

on:
  issues:
    types: [opened]

jobs:
  detect-duplicates:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libhdf5-dev

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas==1.5.3 numpy==1.23.5 torch==1.12.1 transformers==4.32.0 sentence-transformers==2.3.0 gensim==4.3.2 scikit-learn==1.6.1 tensorflow==2.15.0 joblib==1.2.0 requests==2.28.1 beautifulsoup4==4.11.1 nltk==3.7 google-auth==2.17.3 google-api-python-client==2.86.0 huggingface_hub==0.15.1 tf-keras==2.15.0 scipy==1.10.1
          
      - name: Verify TensorFlow version
        run: |
          python -c "import tensorflow as tf; print('TensorFlow Version:', tf.__version__)"
        continue-on-error: false

      - name: Debug GOOGLE_CREDENTIALS
        run: |
          echo "GOOGLE_CREDENTIALS length: ${#GOOGLE_CREDENTIALS}"
          if [ -z "$GOOGLE_CREDENTIALS" ]; then
            echo "GOOGLE_CREDENTIALS is empty"
            exit 1
          else
            echo "GOOGLE_CREDENTIALS is set (content redacted for security)"
          fi
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Download NLTK resources
        run: |
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords'); nltk.download('wordnet'); nltk.download('punkt_tab')"
        continue-on-error: false

      - name: Run duplicate detection
        run: |
          python detect_duplicates.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Comment on issue
        if: success()
        run: |
          COMMENT_BODY=$(python -c "import pandas as pd; df = pd.read_csv('duplicate_ranking.csv'); print('Top 5 potential duplicates:\\n' + df.head(5)[['issue_number', 'fetched_title', 'hybrid_prob']].to_markdown(index=False))")
          ISSUE_NUMBER=${{ github.event.issue.number }}
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}/comments \
            -d "{\"body\": \"$COMMENT_BODY\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload duplicate_ranking.csv
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: duplicate_ranking
          path: duplicate_ranking.csv
